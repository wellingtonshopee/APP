<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciar Usuários</title>

    <!-- Inclusão do Bootstrap CSS (necessário para os estilos de tabela, botões, etc.) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Inclusão do Font Awesome CSS (necessário para os ícones) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        /* Estilos base do corpo da página */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            background-color: #f4f4f4;
            color: #333;
            display: flex; /* Permite layout flexível com sidebar e conteúdo */
            min-height: 100vh;
            overflow-x: hidden; /* Evita rolagem horizontal durante a transição */
        }

        /* Estilos do Menu Lateral (Sidebar) */
        .sidebar {
            height: 100%;
            width: 250px; /* Largura padrão para desktop */
            position: fixed; /* Fixa o sidebar na tela */
            z-index: 1000; /* Garante que fique acima de outros elementos */
            top: 0;
            left: 0;
            background-color: #343a40; /* Cor de fundo escura */
            overflow-x: hidden;
            transition: transform 0.5s ease; /* Transição suave para esconder/mostrar */
            padding-top: 20px; /* Espaço do topo */
            box-shadow: 2px 0 5px rgba(0,0,0,0.5); /* Sombra para profundidade */
            color: white;
            display: flex;
            flex-direction: column;
            align-items: center; /* Centraliza itens como logo e título */
            justify-content: flex-start;
            transform: translateX(0); /* Posição inicial: visível em desktop */
            border: 2px solid red; /* DEBUG: Para ver a borda do sidebar */
        }

        .sidebar.hidden {
            transform: translateX(-250px); /* Esconde o sidebar para a esquerda */
            background-color: #555; /* DEBUG: Muda a cor para confirmar que a classe foi aplicada */
            border: 2px solid purple; /* DEBUG: Muda a cor da borda quando escondido */
        }
        /* Nova classe para mostrar o sidebar no mobile */
        .sidebar.visible {
            transform: translateX(0);
        }

        .sidebar .logo-sidebar {
            width: 120px; /* Tamanho da logo na sidebar */
            margin-bottom: 20px;
            border-radius: 8px; /* Cantos arredondados */
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); /* Sombra */
        }

        .sidebar h2.menu-title { /* Título do menu na sidebar */
            color: white;
            margin-bottom: 20px;
            font-size: 1.4em; /* Tamanho do título do menu */
        }

        .sidebar ul {
            list-style-type: none;
            padding: 0;
            width: 100%;
        }

        .sidebar ul li a {
            padding: 15px 25px;
            text-decoration: none;
            font-size: 1.1em;
            color: #f8f9fa;
            display: block;
            transition: 0.3s;
            text-align: center;
        }

        .sidebar ul li a:hover {
            background-color: #f30909; /* Cor de destaque ao passar o mouse */
            color: white;
        }

        /* Estilos do Conteúdo Principal */
        .main-content {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            margin-left: 250px; /* Espaço para o sidebar visível em desktop */
            transition: margin-left 0.5s ease, width 0.5s ease; /* Transição suave */
            width: calc(100% - 250px); /* Ajusta a largura quando o menu está visível */
            padding: 0; /* Garante que não há padding extra */
            border: 2px solid blue; /* DEBUG: Para ver a borda do main-content */
        }

        .main-content.expanded {
            margin-left: 0; /* Ocupa toda a largura quando o sidebar está escondido */
            width: 100%;
            border: 2px solid green; /* DEBUG: Borda quando expandido */
        }

        /* Estilos para o banner (no conteúdo principal) */
        .banner {
            background-color: #f30909; /* Cor do banner */
            color: white;
            padding: 10px 20px;
            display: flex;
            flex-direction: column; /* Para manter o título e o formulário empilhados */
            align-items: center; /* Centraliza horizontalmente o título e o formulário */
            position: relative; /* Para posicionar elementos absolutamente dentro dele */
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            padding-bottom: 20px; /* Espaçamento extra abaixo do formulário de filtro */
        }

        /* Contêiner para logo e botão de menu - agora no cabeçalho */
        .header-controls {
            display: flex;
            flex-direction: column; /* Coloca a logo acima do botão */
            align-items: flex-start; /* Alinha a logo e o botão à esquerda */
            position: absolute;
            top: 10px;
            left: 20px;
            gap: 5px;
        }

        .logo-header {
            height: 50px; /* Ajuste o tamanho da sua logo aqui */
            width: auto;
            object-fit: contain;
            margin-bottom: 5px;
            border-radius: 8px; /* Cantos arredondados */
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); /* Sombra */
        }
        /* Fallback para logo */
        .logo-header[src=""] {
            display: none; /* Esconde se não houver logo */
        }

        .menu-toggle {
            background: none; /* remove o fundo padrão */
            border: none;
            color: #f8f9fa; /* Cor branca para o ícone */
            font-size: 2em; /* Tamanho do ícone do menu */
            cursor: pointer;
            padding: 0; /* Remove padding extra */
            line-height: 1; /* Ajuda a alinhar o ícone */
        }

        .banner .title {
            margin: 10px 0;
            font-size: 1.8em;
            color: white;
            text-align: center;
            width: 100%;
            padding-left: 80px; /* Espaço para a logo e o botão */
            box-sizing: border-box;
        }

        .filter-form-banner { /* Este é o formulário de filtros dentro do banner */
            display: flex;
            gap: 10px;
            margin-top: 10px;
            flex-wrap: wrap;
            justify-content: center; /* Centraliza os filtros */
            align-items: flex-end; /* Alinha botões/campos na base */
            width: 100%;
            padding: 0 20px; /* Padding horizontal para o formulário */
            box-sizing: border-box;
        }
        .filter-group-banner {
            display: flex;
            flex-direction: column;
            align-items: flex-start; /* Alinha labels à esquerda */
            margin-bottom: 10px; /* Espaçamento entre grupos de filtro */
        }
        .filter-group-banner label {
            font-size: 0.9em;
            color: white;
            margin-bottom: 5px;
            white-space: nowrap;
        }
        .filter-group-banner input[type="date"],
        .filter-group-banner input[type="text"],
        .filter-group-banner select {
            padding: 6px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 0.9em;
            max-width: 150px; /* Ajuste conforme necessário */
            background-color: #fff; /* Fundo branco para inputs */
            color: #333; /* Texto escuro */
        }
        .filter-form-banner button {
            padding: 8px 12px;
            background-color: #28a745; /* Botão de aplicar */
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
            min-width: 100px; /* Largura mínima para botões */
            margin-top: 10px; /* Adiciona margem acima dos botões */
        }
        .filter-form-banner button[type="button"] { /* Botão de limpar */
            background-color: #dc3545;
        }
        .filter-form-banner button:hover {
            opacity: 0.9;
        }


        /* Estilos do Container principal (onde a tabela fica) */
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            flex-grow: 1; /* Permite que o container ocupe o espaço disponível */
            overflow-x: auto; /* Adicionado para tabelas grandes em telas pequenas */
        }

        /* Estilos da Tabela */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        table th, table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
            white-space: nowrap; /* Evita quebra de linha em células da tabela */
        }
        table th {
            background-color: #f2f2f2;
            color: #333;
            font-size: 0.9em;
        }
        table tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        table tr:hover {
            background-color: #f1f1f1;
        }

        /* Flash messages */
        .flashes {
            list-style-type: none;
            padding: 0;
            margin: 20px 0;
        }
        .flashes li {
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
            font-weight: bold;
        }
        .flash.success {
            background-color: #d4edda;
            color: #155724;
            border-color: #c3e6cb;
        }
        .flash.danger {
            background-color: #f8d7da;
            color: #721c24;
            border-color: #f5c6cb;
        }
        .flash.warning {
            background-color: #fff3cd;
            color: #856404;
            border-color: #ffeeba;
        }

        /* Media Queries para Responsividade */
        @media (max-width: 768px) {
            .sidebar {
                width: 180px; /* Reduz a largura do sidebar em telas menores */
                transform: translateX(-180px); /* Escondido por padrão em mobile */
            }
            .sidebar.hidden {
                transform: translateX(-180px); /* Permanece escondido */
            }
            .sidebar.visible { /* Classe para mostrar o sidebar em mobile (adicionada via JS) */
                transform: translateX(0); /* Mostra quando ativado */
            }
            .main-content {
                margin-left: 0; /* Começa sem margem à esquerda em mobile */
                width: 100%; /* Ocupa toda a largura */
            }
            .main-content.expanded { /* Mesmo para quando expandido em mobile, não há margem */
                margin-left: 0;
            }

            .banner {
                flex-direction: column; /* Empilha os elementos do banner em mobile */
                align-items: center; /* Centraliza tudo */
                padding-top: 80px; /* Adicione padding para o conteúdo não ficar por baixo da logo/botão */
            }

            .header-controls {
                position: absolute;
                top: 10px;
                left: 10px; /* Ajuste para mobile */
                align-items: flex-start; /* Mantém logo/botão à esquerda */
            }

            .banner .title {
                font-size: 1.5em; /* Reduz o tamanho do título no banner */
                padding-left: 0; /* Remove padding para mobile */
                margin-top: 0; /* Ajuste a margem superior do título */
            }

            .filter-form-banner {
                flex-direction: column; /* Filtros empilhados em mobile */
                align-items: stretch; /* Estica os inputs */
                gap: 15px; /* Mais espaço entre os filtros */
            }
            .filter-group-banner {
                width: 100%; /* Ocupa toda a largura disponível */
                align-items: stretch; /* Estica a label e o input */
            }
            .filter-group-banner label {
                text-align: left; /* Alinha a label à esquerda em mobile */
            }
            .filter-group-banner input[type="date"],
            .filter-group-banner input[type="text"],
            .filter-group-banner select {
                max-width: none; /* Remove limite de largura */
                width: 100%; /* Ocupa toda a largura */
            }
        }
    </style>
</head>
<body>
    <div class="sidebar hidden" id="mySidebar">
        <!-- Caminho da logo para o sidebar. Substitua pela sua URL real ou caminho relativo. -->
        <img src="https://placehold.co/120x120/343a40/ffffff?text=LOGO"
             onerror="this.onerror=null; this.src='https://placehold.co/120x120/343a40/ffffff?text=LOGO';"
             alt="Logo SysSPX" class="logo-sidebar">
        <h2 class="menu-title">Menu</h2>
        <ul>
            <!-- Links de navegação. Substitua '#' por suas URLs reais. -->
            <li><a href="#">Gerenciar Usuários</a></li>
            <li><a href="#">Cadastrar Novo Usuário</a></li>
            <li><a href="#">Status de Entrega</a></li>
            <li><a href="#">Adicionar Etapa</a></li>
            <li><a href="#">Adicionar Situação do Pedido</a></li>
            <li><a href="#">Configurações</a></li>
            <li><a href="#">Sair</a></li>
        </ul>
    </div>

    <div class="main-content expanded" id="mainContent">
        <div class="banner">
            <div class="header-controls">
                <!-- Caminho da logo para o cabeçalho do banner. Substitua pela sua URL real ou caminho relativo. -->
                <img src="https://placehold.co/50x50/f30909/ffffff?text=LOGO"
                     onerror="this.onerror=null; this.src='https://placehold.co/50x50/f30909/ffffff?text=LOGO';"
                     alt="Logo Cabeçalho" class="logo-header">
                <button class="menu-toggle" id="menuToggle">
                    <i class="fas fa-bars"></i> <!-- Ícone Font Awesome para o botão de menu -->
                </button>
            </div>
            <h1 class="title">Gerenciamento de Usuários</h1>

            <!-- Formulário de Filtros dentro do Banner -->
            <form action="#" method="GET" class="filter-form-banner">
                <div class="filter-group-banner">
                    <label for="filter_matricula">Matrícula:</label>
                    <input type="text" id="filter_matricula" name="matricula" value="" placeholder="Digite a matrícula">
                </div>
                <div class="filter-group-banner">
                    <label for="filter_username">Usuário:</label>
                    <input type="text" id="filter_username" name="username" value="" placeholder="Digite o usuário">
                </div>
                <button type="submit">Aplicar Filtro</button>
                <button type="button" onclick="window.location.href='#'">Limpar Filtro</button>
            </form>
        </div>

        <div class="container">
            <h2>Lista de Usuários</h2>
            <!-- Mensagens flash (exemplo estático para página standalone) -->
            {# <div class="alert alert-success alert-dismissible fade show" role="alert">
                Usuário atualizado com sucesso!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div> #}

            <a href="#" class="btn btn-primary mb-3">
                <i class="fas fa-user-plus me-2"></i> Cadastrar Novo Usuário
            </a>

            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Matrícula</th>
                            <th scope="col">Usuário</th>
                            <th scope="col">Nome Completo</th>
                            <th scope="col">Admin</th>
                            <th scope="col">Ativo</th>
                            <th scope="col">Permissões de Acesso</th>
                            <th scope="col">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Exemplo de dados de usuário (substitua por dados reais se vier de Flask) -->
                        <tr>
                            <td>1</td>
                            <td>0001</td>
                            <td>admin</td>
                            <td>Administrador Sistema</td>
                            <td><span class="badge bg-success"><i class="fas fa-check-circle me-1"></i> Sim</span></td>
                            <td><span class="badge bg-success"><i class="fas fa-circle-check me-1"></i> Sim</span></td>
                            <td><span class="badge bg-primary">Acesso Total</span></td>
                            <td>
                                <a href="#" class="btn btn-sm btn-warning mb-1" title="Editar Usuário">
                                    <i class="fas fa-edit"></i> <span class="d-none d-md-inline">Editar</span>
                                </a>
                                <a href="#"
                                   class="btn btn-sm btn-danger mb-1"
                                   onclick="return confirm('Tem certeza que deseja desativar o usuário admin?');"
                                   title="Alternar Status">
                                    <i class="fas fa-user-slash"></i>
                                    <span class="d-none d-md-inline">Desativar</span>
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td>2</td>
                            <td>0002</td>
                            <td>usuario_comum</td>
                            <td>Usuário Padrão</td>
                            <td><span class="badge bg-danger"><i class="fas fa-times-circle me-1"></i> Não</span></td>
                            <td><span class="badge bg-success"><i class="fas fa-circle-check me-1"></i> Sim</span></td>
                            <td><span class="badge bg-info text-dark me-1 mb-1">pacotes_rota</span><span class="badge bg-info text-dark me-1 mb-1">dashboard</span></td>
                            <td>
                                <a href="#" class="btn btn-sm btn-warning mb-1" title="Editar Usuário">
                                    <i class="fas fa-edit"></i> <span class="d-none d-md-inline">Editar</span>
                                </a>
                                <a href="#"
                                   class="btn btn-sm btn-danger mb-1"
                                   onclick="return confirm('Tem certeza que deseja desativar o usuário usuario_comum?');"
                                   title="Alternar Status">
                                    <i class="fas fa-user-slash"></i>
                                    <span class="d-none d-md-inline">Desativar</span>
                                </a>
                            </td>
                        </tr>
                        <!-- Fim dos dados de exemplo -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</body>

<!-- Inclusão do Bootstrap JS (necessário para o alert dismiss e outros componentes) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var sidebar = document.getElementById('mySidebar');
        var mainContent = document.getElementById('mainContent');
        var menuToggle = document.getElementById('menuToggle');

        // Inicialmente, esconde o sidebar em telas pequenas, mostra em telas grandes
        if (window.innerWidth <= 768) {
            sidebar.classList.add('hidden');
            mainContent.classList.add('expanded');
        } else {
            sidebar.classList.remove('hidden');
            mainContent.classList.remove('expanded');
        }

        if (menuToggle) {
            menuToggle.addEventListener('click', function() {
                sidebar.classList.toggle('hidden');
                sidebar.classList.toggle('visible'); // Adiciona/remove 'visible' para controle no mobile
                mainContent.classList.toggle('expanded');
            });
        }

        // Opcional: ajustar sidebar e mainContent ao redimensionar a tela
        window.addEventListener('resize', function() {
            if (window.innerWidth <= 768) {
                sidebar.classList.add('hidden');
                mainContent.classList.add('expanded');
            } else {
                sidebar.classList.remove('hidden');
                mainContent.classList.remove('expanded');
            }
        });
    });
</script>
</html>




@app.route('/usuario/editar/<int:usuario_id>', methods=['GET', 'POST'])
@permission_required('Gerenciar Usuários') # Exige permissão para esta página
def editar_usuario(usuario_id):
    user = User.query.get_or_404(usuario_id)
    
    # CORRIGIDO: Use 'EditarUsuarioForm' em vez de 'EditUserForm'
    form = EditarUsuarioForm(
        obj=user,
        original_username=user.username,
        original_email=user.email,
        original_matricula=user.matricula
    )

    # Preencher as opções de páginas/permissões dinamicamente
    form.paginas_acesso.choices = [(p.id, p.nome_pagina) for p in Permissao.query.order_by(Permissao.nome_pagina).all()]

    if form.validate_on_submit():
        # ... (seu código de log e atualização do usuário continua o mesmo) ...

        # Capturar detalhes antes da modificação para o log
        old_username = user.username
        old_email = user.email
        old_is_admin = user.is_admin
        old_matricula = user.matricula
        old_nome_completo = user.nome_completo
        old_ativo = user.ativo
        old_perms = sorted([p.nome_pagina for p in user.permissoes])

        # ATUALIZAÇÃO DOS DADOS DO USUÁRIO
        user.username = form.username.data
        user.email = form.email.data
        user.is_admin = form.is_admin.data
        user.matricula = form.matricula.data
        user.nome_completo = form.nome_completo.data
        user.ativo = form.ativo.data

        if form.password.data:
            user.password = form.password.data

        if user.is_admin:
            user.permissoes = []
        else:
            selected_permissions_ids = form.paginas_acesso.data # Use paginas_acesso aqui
            user.permissoes = Permissao.query.filter(Permissao.id.in_(selected_permissions_ids)).all()
        
        db.session.commit()

        # Logar a edição do usuário
        new_perms = sorted([p.nome_pagina for p in user.permissoes])
        detalhes = f"Usuário {user.username} (ID: {user.id}) editado por {current_user.username if current_user.is_authenticated else 'sistema'}.\n"
        
        if old_username != user.username: detalhes += f"Nome de Usuário alterado de '{old_username}' para '{user.username}'.\n"
        if old_email != user.email: detalhes += f"Email alterado de '{old_email}' para '{user.email}'.\n"
        if old_is_admin != user.is_admin: detalhes += f"Admin alterado de '{old_is_admin}' para '{user.is_admin}'.\n"
        if old_matricula != user.matricula: detalhes += f"Matrícula alterada de '{old_matricula}' para '{user.matricula}'.\n"
        if old_nome_completo != user.nome_completo: detalhes += f"Nome Completo alterado de '{old_nome_completo}' para '{user.nome_completo}'.\n"
        if old_ativo != user.ativo: detalhes += f"Status Ativo alterado de '{old_ativo}' para '{user.ativo}'.\n"
        if old_perms != new_perms: detalhes += f"Permissões alteradas de '{', '.join(old_perms)}' para '{', '.join(new_perms)}'."

        log_entry = LogAtividade(
            user_id=current_user.id if current_user.is_authenticated else None,
            acao='Edição de Usuário',
            detalhes=detalhes.strip(),
            ip_origem=request.remote_addr
        )
        db.session.add(log_entry)
        db.session.commit()

        flash('Usuário atualizado com sucesso!', 'success')
        return redirect(url_for('gerenciar_usuarios'))
        
    elif request.method == 'GET':
        # Pre-selecionar as permissões atuais do usuário no formulário GET
        form.paginas_acesso.data = [p.id for p in user.permissoes] 
        
    return render_template('editar_usuario.html', form=form, user=user)

